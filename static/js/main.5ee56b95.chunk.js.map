{"version":3,"sources":["fonts/RetroGaming.ttf","fonts/RetroGaming.woff","fonts/RetroGaming.woff2","assets/background.gif","assets/background-paused.png","assets/car.png","globalStyle.tsx","components/TitleHeader.tsx","components/TitleInput.tsx","components/TitleButton.tsx","pages/StartScreen.tsx","components/Car.tsx","components/CenteredText.tsx","components/PauseOverlay.tsx","pages/GameScreen.tsx","App.tsx","index.tsx"],"names":["module","exports","GlobalStyle","createGlobalStyle","RetroGamingTtf","RetroGamingWoff","RetroGamingWoff2","Title","styled","h4","TitleHeader","text","Input","input","TitleInput","setValue","onKeyDown","data-testid","onChange","event","target","value","Button","button","props","isVisible","TitleButton","label","onClick","disabled","Position","Container","div","ErrorText","h1","StartScreen","name","setName","handleStart","errorMsg","key","length","undefined","StyledCar","img","car","x","Car","position","Left","Middle","Right","CenteredText","Background","PauseOverlay","isPaused","pausedBackground","background","GameScreen","useState","currentPosition","setCurrentPosition","timerValue","setTimerValue","setPaused","shouldHandleControls","useEventListener","useEffect","setTimeout","App","hasGameStarted","setGameStarted","exitBeforeEnter","initial","opacity","animate","exit","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5ee56b95.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/RetroGaming.4c19fc87.ttf\";","module.exports = __webpack_public_path__ + \"static/media/RetroGaming.447cad17.woff\";","module.exports = __webpack_public_path__ + \"static/media/RetroGaming.0b863896.woff2\";","module.exports = __webpack_public_path__ + \"static/media/background.d0d2cd17.gif\";","module.exports = __webpack_public_path__ + \"static/media/background-paused.8f82fbfc.png\";","module.exports = __webpack_public_path__ + \"static/media/car.56be0a4e.png\";","import { createGlobalStyle } from 'styled-components';\nimport RetroGamingTtf from './fonts/RetroGaming.ttf';\nimport RetroGamingWoff from './fonts/RetroGaming.woff';\nimport RetroGamingWoff2 from './fonts/RetroGaming.woff2';\n\nconst GlobalStyle = createGlobalStyle`\n  @font-face {\n    font-family: \"Retro Gaming\";\n    src: url(${RetroGamingTtf}) format(\"truetype\"),\n         url(${RetroGamingWoff}) format(\"woff\"),\n         url(${RetroGamingWoff2}) format(\"woff2\");\n  }\n\n  body {\n    padding: 0;\n    margin: 0;\n    font-family: Retro Gaming;\n    font-size: calc(1em + 1vw);\n  }\n\n  button {\n    font-family: Retro Gaming;\n    font-size: inherit;\n  }\n\n  input {\n    font-family: Retro Gaming;\n    font-size: inherit;\n  }\n`;\n\nexport default GlobalStyle;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Title = styled.h4`\n  text-align: center;\n  color: rgb(59, 134, 255);\n`;\n\ninterface Props {\n  text: string;\n}\n\nconst TitleHeader = ({ text }: Props) => {\n  return <Title>{text}</Title>;\n};\n\nexport default TitleHeader;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Input = styled.input`\n  border: none;\n  padding: 5px;\n  text-align: center;\n  height: 5%;\n  background-color: lightGray;\n  transition: background-color 250ms ease, color 250ms ease;\n  color: #fff;\n\n  &:focus {\n    outline: none;\n    background-color: whiteSmoke;\n    color: #000;\n  }\n`;\n\ninterface Props {\n  setValue: Function;\n  onKeyDown?: (event: React.KeyboardEvent) => void;\n}\nconst TitleInput = ({ setValue, onKeyDown }: Props) => {\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setValue(event.target.value);\n\n  return (\n    <Input\n      data-testid=\"TitleInput\"\n      onChange={handleChange}\n      onKeyDown={onKeyDown}\n    />\n  );\n};\n\nexport default TitleInput;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface StyledProps {\n  isVisible: boolean;\n}\nconst Button = styled.button`\n  opacity: ${(props: StyledProps) => (props.isVisible ? '1' : '0')};\n  transition: opacity 250ms ease;\n  margin-top: 20px;\n  padding: 10px;\n  border: none;\n  background-color: rgb(59, 134, 255);\n  color: white;\n\n  &:focus {\n    outline: none;\n  }\n\n  &:active {\n    transform: translateY(2px);\n  }\n\n  &:hover {\n    opacity: ${(props: StyledProps) => (props.isVisible ? '0.8' : '0')};\n  }\n`;\n\ninterface Props {\n  isVisible: boolean;\n  label: string;\n  onClick: (event: React.MouseEvent) => void;\n}\nconst TitleButton = ({ isVisible, label, onClick }: Props) => {\n  return (\n    <Button isVisible={isVisible} disabled={!isVisible} onClick={onClick}>\n      {label}\n    </Button>\n  );\n};\n\nexport default TitleButton;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport TitleHeader from '../components/TitleHeader';\nimport TitleInput from '../components/TitleInput';\nimport TitleButton from '../components/TitleButton';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\ninterface StyledErrorTextProps {\n  isVisible: boolean;\n}\nconst ErrorText = styled.h1`\n  visibility: ${(props: StyledErrorTextProps) =>\n    props.isVisible ? 'visible' : 'hidden'};\n  color: red;\n  font-size: 18px;\n`;\n\ninterface Props {\n  name: string;\n  setName: (name: string) => void;\n  handleStart: (event: React.MouseEvent | React.KeyboardEvent) => void;\n  errorMsg?: string;\n}\nconst StartScreen = ({ name, setName, handleStart, errorMsg }: Props) => {\n  return (\n    <Container>\n      <TitleHeader text=\"Insira seu nome(min. 3 caracteres)\" />\n      <TitleInput\n        setValue={setName}\n        onKeyDown={(event: React.KeyboardEvent) => {\n          if (event.key === 'Enter' && name.length >= 3) {\n            handleStart(event);\n          }\n        }}\n      />\n      <ErrorText\n        isVisible={\n          errorMsg !== null && errorMsg !== undefined && errorMsg.length !== 0\n        }\n      >\n        {errorMsg}\n      </ErrorText>\n      <TitleButton\n        label=\"Iniciar corrida\"\n        isVisible={name.length >= 3}\n        onClick={handleStart}\n      />\n    </Container>\n  );\n};\n\nexport default StartScreen;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport car from '../assets/car.png';\n\nexport enum Position {\n  Left,\n  Middle,\n  Right,\n}\n\ninterface StyledProps {\n  x: string;\n}\nconst StyledCar = styled.img`\n  content: url(${car});\n  position: relative;\n  margin-left: 5%;\n  width: 20vh;\n  height: 20vh;\n  top: 80vh;\n  left: ${(props: StyledProps) => props.x};\n  transition: left 250ms ease;\n`;\n\ninterface Props {\n  position: Position;\n}\nconst Car = ({ position }: Props) => {\n  const x = (() => {\n    switch (position) {\n      case Position.Left:\n        return '0%';\n      case Position.Middle:\n        return '33.3%';\n      case Position.Right:\n        return '66.6%';\n    }\n  })();\n\n  return <StyledCar x={x} />;\n};\n\nexport default Car;\n","import styled from 'styled-components';\n\nconst CenteredText = styled.h1`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  margin: 0 0 0 -25px;\n  color: red;\n`;\n\nexport default CenteredText;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport CenteredText from '../components/CenteredText';\n\nconst Background = styled.div`\n  position: absolute;\n  width: inherit;\n  height: inherit;\n  background-color: rgba(0, 0, 0, 0.4);\n  z-index: 2;\n`;\n\nconst PauseOverlay = () => {\n  return (\n    <Background>\n      <CenteredText>Paused</CenteredText>\n    </Background>\n  );\n};\n\nexport default PauseOverlay;\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\nimport useEventListener from '@use-it/event-listener';\n\nimport background from '../assets/background.gif';\nimport pausedBackground from '../assets/background-paused.png';\nimport Car, { Position } from '../components/Car';\nimport CenteredText from '../components/CenteredText';\nimport PauseOverlay from '../components/PauseOverlay';\n\ninterface BackgroundProps {\n  isPaused: boolean;\n}\nconst Background = styled.div`\n  background-image: url(${(props: BackgroundProps) =>\n    props.isPaused ? pausedBackground : background});\n  background-size: 100% 100%;\n  width: 100vh;\n  height: 100vh;\n`;\n\nconst GameScreen = () => {\n  const [currentPosition, setCurrentPosition] = useState(Position.Middle);\n  const [timerValue, setTimerValue] = useState(3);\n  const [isPaused, setPaused] = useState(false);\n  const shouldHandleControls = timerValue === -1 && !isPaused;\n\n  const moveLeft = () => {\n    if (currentPosition !== Position.Left) {\n      setCurrentPosition(currentPosition - 1);\n    }\n  };\n\n  const moveRight = () => {\n    if (currentPosition !== Position.Right) {\n      setCurrentPosition(currentPosition + 1);\n    }\n  };\n\n  const handleControls = (event: React.KeyboardEvent): void => {\n    if (shouldHandleControls) {\n      switch (event.key) {\n        case 'A':\n        case 'a': {\n          setCurrentPosition(Position.Left);\n          break;\n        }\n        case 'S':\n        case 's': {\n          setCurrentPosition(Position.Middle);\n          break;\n        }\n        case 'D':\n        case 'd': {\n          setCurrentPosition(Position.Right);\n          break;\n        }\n        case 'ArrowLeft': {\n          moveLeft();\n          break;\n        }\n        case 'ArrowRight': {\n          moveRight();\n          break;\n        }\n      }\n    }\n  };\n\n  const handleMisc = (event: React.KeyboardEvent) => {\n    if (timerValue === -1) {\n      switch (event.key) {\n        case 'Escape': {\n          setPaused(!isPaused);\n          break;\n        }\n      }\n    }\n  };\n\n  useEventListener('keydown', handleControls);\n  useEventListener('keydown', handleMisc);\n  useEffect(() => {\n    if (timerValue >= 0) {\n      setTimeout(() => setTimerValue(timerValue - 1), 1000);\n    }\n  }, [timerValue]);\n\n  return (\n    <>\n      <Background isPaused={isPaused}>\n        {timerValue >= 0 && <CenteredText>{timerValue}</CenteredText>}\n        {isPaused && <PauseOverlay />}\n        <Car position={currentPosition} />\n      </Background>\n    </>\n  );\n};\n\nexport default GameScreen;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { motion, AnimatePresence } from 'framer-motion';\n\nimport GlobalStyle from './globalStyle';\nimport StartScreen from './pages/StartScreen';\nimport GameScreen from './pages/GameScreen';\n\nconst Container = styled.div`\n  height: 100vh;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  align-content: center;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst App = () => {\n  const [name, setName] = useState('');\n  const [hasGameStarted, setGameStarted] = useState(false);\n  const handleStartGameClick = () => setGameStarted(!hasGameStarted);\n\n  return (\n    <>\n      <GlobalStyle />\n      <Container>\n        <AnimatePresence exitBeforeEnter>\n          <motion.div\n            key={hasGameStarted ? 'gameScreen' : 'startScreen'}\n            initial={{ x: 600, opacity: 0 }}\n            animate={{ x: 0, opacity: 1 }}\n            exit={{ x: -600, opacity: 0 }}\n          >\n            {hasGameStarted ? (\n              <GameScreen />\n            ) : (\n              <StartScreen\n                name={name}\n                setName={setName}\n                handleStart={handleStartGameClick}\n              />\n            )}\n          </motion.div>\n        </AnimatePresence>\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}